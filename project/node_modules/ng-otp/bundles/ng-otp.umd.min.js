!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("rxjs"),require("rxjs/operators"),require("@angular/core"),require("@angular/forms"),require("@angular/platform-browser")):"function"==typeof define&&define.amd?define("ng-otp",["exports","rxjs","rxjs/operators","@angular/core","@angular/forms","@angular/platform-browser"],e):e(t["ng-otp"]={},t.rxjs,t.rxjs.operators,t.ng.core,t.ng.forms,t.ng.platformBrowser)}(this,function(t,r,n,i,o,e){"use strict";var s=(p.prototype.isEmptySting=function(t){return""===t},p.prototype.isLastInput=function(t,e){return t===e},p.prototype.getElement=function(t){return document.querySelector("#otp-"+t)},p.decorators=[{type:i.Injectable,args:[{providedIn:"root"}]}],p.ctorParameters=function(){return[]},p.ngInjectableDef=i.defineInjectable({factory:function(){return new p},token:p,providedIn:"root"}),p);function p(){}var a=(Object.defineProperty(c.prototype,"allowedCharacters",{set:function(t){t?this._allowedCharacters=t:this.throwErrorForUndefinedElement(t)},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"typeOfInput",{get:function(){return this._typeOfInput},set:function(t){t?(this._typeOfInput=t,this.keyboardType="password"===t?"numeric":"text"):this.throwErrorForUndefinedElement(t)},enumerable:!0,configurable:!0}),c.prototype.ngOnInit=function(){this.limit=this.limit?this.limit:4,this.setFormBuilder()},c.prototype.setFormBuilder=function(){var e=this;this.otpForm=this.formBuilder.group({}),this.limitArray=Array.from(Array(this.limit).keys()),this.limitArray.map(function(t){e.otpForm.addControl("otp-"+t,new o.FormControl("",o.Validators.required))})},c.prototype.changeFocus=function(t){if(console.log(this.isKeyAcceptable),this.isKeyAcceptable){var e=this.ngOtpService.getElement(t);t&&this.ngOtpService.isEmptySting(e.value)?this.moveBackward(t):this.ngOtpService.isLastInput(t,this.limit-1)?(e.select(),this.otpOut.emit(Object.values(this.otpForm.value).join(""))):this.ngOtpService.isEmptySting(e.value)||this.moveForward(t)}else this.isKeyAcceptable=!0},c.prototype.moveForward=function(t){this.ngOtpService.getElement(t+1).focus()},c.prototype.moveBackward=function(t){this.ngOtpService.getElement(t-1).focus()},c.prototype.onFocus=function(t){this.ngOtpService.getElement(t).select()},c.prototype.ngOnDestroy=function(){this.subscription.unsubscribe()},c.prototype.onKeyDown=function(t){t.key&&"Backspace"!==t.key&&"Delete"!==t.key&&this._allowedCharacters&&(this._allowedCharacters instanceof RegExp?this._allowedCharacters.test(t.key)||(this.isKeyAcceptable=!1,t.preventDefault()):this._allowedCharacters.includes(t.key)||(this.isKeyAcceptable=!1,t.preventDefault()))},c.prototype.throwErrorForUndefinedElement=function(t){throw new Error("Is not possibile set "+t+" to this parameter")},c.decorators=[{type:i.Component,args:[{selector:"ng-otp",template:'<div\n  [formGroup]="otpForm"\n  class="otp-wrap"\n>\n  <input\n    [type]="typeOfInput"\n    class="otp-input"\n    maxlength="1"\n    id="otp-{{i}}"\n    *ngFor="let control of limitArray; let i = index"\n    placeholder="-"\n    (keyup)="changeFocus$.next(i)"\n    (keydown)="onKeyDown($event)"\n    (focusin)="onFocus(i)"\n    formControlName="otp-{{i}}"\n    [attr.inputmode]="keyboardType"\n  >\n</div>',styles:[".otp-input{width:50px;height:45px;background:0 0;border:none;text-align:center;font-size:25px;font-weight:600;outline:0}.otp-input::-moz-selection{background:#f0f9ff}.otp-input::selection{background:#f0f9ff}.otp-wrap{border-bottom:2px solid #d7d7d7;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}"]}]}],c.ctorParameters=function(){return[{type:o.FormBuilder},{type:s}]},c.propDecorators={limit:[{type:i.Input}],allowedCharacters:[{type:i.Input}],typeOfInput:[{type:i.Input}],otpOut:[{type:i.Output}]},c);function c(t,e){var o=this;this.formBuilder=t,this.ngOtpService=e,this._allowedCharacters=/./,this._typeOfInput="text",this.keyboardType="text",this.otpOut=new i.EventEmitter,this.limitArray=[],this.isKeyAcceptable=!0,this.changeFocus$=new r.Subject,this.subscription=new r.Subscription,this.subscription.add(this.changeFocus$.pipe(n.throttleTime(50)).subscribe(function(t){o.changeFocus(t)}))}var u=(l.decorators=[{type:i.NgModule,args:[{declarations:[a],imports:[e.BrowserModule,o.ReactiveFormsModule],exports:[a]}]}],l);function l(){}t.NgOtpService=s,t.NgOtpComponent=a,t.NgOtpModule=u,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ng-otp.umd.min.js.map