{"version":3,"file":"ng-otp.component.d.ts","sources":["ng-otp.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, EventEmitter, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { NgOtpService } from './ng-otp.service';\nimport { Subject } from 'rxjs';\nexport declare class NgOtpComponent implements OnInit, OnDestroy {\n    private formBuilder;\n    private ngOtpService;\n    private _allowedCharacters;\n    private _typeOfInput;\n    keyboardType: 'numeric' | 'text';\n    limit: number;\n    allowedCharacters: string | RegExp;\n    typeOfInput: 'text' | 'number' | 'password';\n    otpOut: EventEmitter<{}>;\n    otpForm: FormGroup;\n    limitArray: any[];\n    private isKeyAcceptable;\n    changeFocus$: Subject<{}>;\n    private subscription;\n    constructor(formBuilder: FormBuilder, ngOtpService: NgOtpService);\n    ngOnInit(): void;\n    setFormBuilder(): void;\n    changeFocus(id: number): void;\n    private moveForward;\n    private moveBackward;\n    onFocus(id: any): void;\n    ngOnDestroy(): void;\n    onKeyDown(event: KeyboardEvent): void;\n    private throwErrorForUndefinedElement;\n}\n"]}