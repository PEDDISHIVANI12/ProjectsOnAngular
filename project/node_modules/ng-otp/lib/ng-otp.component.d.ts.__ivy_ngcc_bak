import { OnDestroy, EventEmitter, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { NgOtpService } from './ng-otp.service';
import { Subject } from 'rxjs';
export declare class NgOtpComponent implements OnInit, OnDestroy {
    private formBuilder;
    private ngOtpService;
    private _allowedCharacters;
    private _typeOfInput;
    keyboardType: 'numeric' | 'text';
    limit: number;
    allowedCharacters: string | RegExp;
    typeOfInput: 'text' | 'number' | 'password';
    otpOut: EventEmitter<{}>;
    otpForm: FormGroup;
    limitArray: any[];
    private isKeyAcceptable;
    changeFocus$: Subject<{}>;
    private subscription;
    constructor(formBuilder: FormBuilder, ngOtpService: NgOtpService);
    ngOnInit(): void;
    setFormBuilder(): void;
    changeFocus(id: number): void;
    private moveForward;
    private moveBackward;
    onFocus(id: any): void;
    ngOnDestroy(): void;
    onKeyDown(event: KeyboardEvent): void;
    private throwErrorForUndefinedElement;
}
