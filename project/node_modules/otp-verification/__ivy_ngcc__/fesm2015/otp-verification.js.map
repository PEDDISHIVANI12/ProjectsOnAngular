{"version":3,"file":"otp-verification.js","sources":["otp-verification/lib/otp-verification.service.ts","otp-verification/lib/otp-verification.component.ts","otp-verification/lib/otp-verification.directive.ts","otp-verification/lib/otp-verification.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OtpVerificationService {\n\n  constructor() { }\n\n  public isBackspace(key) {\n    return key === 'Backspace';\n  }\n\n}\n","import { Component, Output, ViewChild, EventEmitter, Input, ElementRef } from '@angular/core';\nimport { OtpVerificationService } from './otp-verification.service';\n\n@Component({\n  selector: 'ng-otp',\n  templateUrl: './otp-verification.component.html',\n  styleUrls: ['./otp-verification.component.scss']\n})\nexport class OtpVerificationComponent {\n\n  @Input() isAlphanumeric: boolean;\n\n  @Output() otpOut = new EventEmitter();\n\n  @ViewChild('otp') otpVal: ElementRef;\n\n  public specialKeys = [\n    'CapsLock', 'ControlLeft', 'ControlRight', 'ShiftLeft', 'ShiftRight',\n    'AltLeft' , 'AltRight'   , 'Escape'      , 'Backquote', 'ArrowUp'   ,\n    'Space'   , 'ArrowDown'  , 'Delete'      , 'Insert'   , 'End'       ,\n    'Home'    , 'PageDown'   , 'ArrowRight'  , 'WakeUp'\n  ];\n\n  public inputLimt = [];\n\n  constructor(\n    private otpVerificationService: OtpVerificationService\n  ) { }\n\n  public nextDigit(event, next, previous, current) {\n    if (this.specialKeys.includes(event.code)) {\n      return;\n    }\n    if (!this.otpVerificationService.isBackspace(event.key) && !this.isAlphanumeric && isNaN(event.key)) {\n      current.value = '';\n      return;\n    }\n    if (this.otpVerificationService.isBackspace(event.key)) {\n      if (current.value !== '' && previous) {\n        current.value = '';\n        previous.focus();\n      } else if (previous) {\n        previous.value = '';\n        previous.focus();\n      } else {\n        current.value = '';\n      }\n    } else if (!this.otpVerificationService.isBackspace(event.key)) {\n      if (event.key.length === 1) {\n        if (event.getModifierState('CapsLock')) {\n          current.value = event.key.toUpperCase();\n        } else {\n          current.value = event.key;\n        }\n      }\n      setTimeout(() => {\n        if (next) {\n          next.focus();\n        }\n      });\n    }\n    this.returnOtp();\n  }\n\n  public returnOtp() {\n    let otp = '';\n    Array.from(this.otpVal.nativeElement.children).forEach(child => {\n      if (!child['value']) { return; }\n      otp += child['value'];\n    });\n\n    if (otp.length === 4) {\n      this.otpOut.emit(otp);\n    }\n  }\n\n}\n","import { Directive, HostListener, Input } from '@angular/core';\n\n\n@Directive({\n  selector: '[angularOnlyNumber]'\n})\n\nexport class OtpVerificationDirective {\n\n  @Input() isAlphanumeric = true;\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(e: KeyboardEvent) {\n    if (!this.isAlphanumeric && (e.shiftKey || !(/Digit[0-9]/.test(e.code) || /Numpad[0-9]/.test(e.code)))) {\n      e.preventDefault();\n    }\n    if (this.isAlphanumeric && !/Key[A-Z]/.test(e.code)) {\n      e.preventDefault();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { OtpVerificationComponent } from './otp-verification.component';\nimport { OtpVerificationDirective } from './otp-verification.directive';\n\n@NgModule({\n  declarations: [OtpVerificationComponent, OtpVerificationDirective],\n  imports: [],\n  providers: [],\n  exports: [OtpVerificationComponent]\n})\nexport class OtpVerificationModule { }\n"]}